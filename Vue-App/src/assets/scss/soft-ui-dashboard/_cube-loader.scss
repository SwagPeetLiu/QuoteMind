// Colouring Settings
$duration: 3s;
$themes: (
  info: (
    #7ed9fd,
    #70b8f7,
    #6297f1,
    #5476eb,
    #4655e5,
    #3834df
  ),
  primary: (
    #b8749e,
    #a868a0,
    #985c9b,
    #885096,
    #78448c,
    #683882
  ),
  success: (
    #88d32f,
    #43b9a3,
    #7ecc47,
    #509b95,
    #6dc25d,
    #5dae8e
  ),
  danger: (
    #ff9999,
    #e63939,
    #ea0606,
    #b80505,
    #8a0404,
    #6b0303
  ),
  warning: (
    #ffcf9f,
    #e5a55d,
    #df9a50,
    #b27b40,
    #865d30,
    #694a26
  ),
  dark: (
    #6f7289,
    #4c5067,
    #5e6076,
    #4a4e63,
    #43464f,
    #3d3f45
  )
);

@each $theme, $colors in $themes {
  .cubes[data-theme="#{$theme}"] {
    --theme-bg-top: #{nth($colors, 1)};
    --theme-bg-bottom: #{nth($colors, 2)};
    --theme-fl-top: #{nth($colors, 3)};
    --theme-fl-bottom: #{nth($colors, 4)};
    --theme-fr-top: #{nth($colors, 5)};
    --theme-fr-bottom: #{nth($colors, 6)};
  }
}

// cube overlay during transitions
.cube-overlay {
  position: absolute;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  transform-style: preserve-3d;
  perspective: 1000px;
  z-index: 19999;
  background: rgba(255, 255, 255, 0.8);
  animation: fadeOut 0.5s ease-out $duration forwards; // fade out after animation

  // fade out effects
  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  // Display Settings
  $delays: ();
  $variance: 280;
  $easing: cubic-bezier(0.5, 0, 0, 1);
  $gap: 2px;

  // layer variations
  @for $row from 1 through 3 {
    @for $col from 1 through 3 {
      @for $layer from 1 through 3 {
        $delays: map-merge(
          $delays,
          (
            "#{$row}#{$col}#{$layer}": random($variance)
          )
        );
      }
    }
  }

  *,
  *:before,
  *:after {
    box-sizing: border-box;
    position: relative;
    animation-timing-function: $easing !important;
  }

  #shadows:not(:checked) ~ .cubes {
    --shadow-filter: none;
  }

  .cubes {
    z-index: 19999;
    width: 7.5vmin;
    height: 7.5vmin;
    transform: rotateX(60deg) rotateZ(-45deg);
    backface-visibility: visible;
    overflow: visible;
    transform-style: preserve-3d;
    perspective: 9000px;
  }

  .cube,
  .large-shadow {
    height: 7.5vmin;
    width: 7.5vmin;
    transform-style: preserve-3d;
    backface-visibility: visible;
    transform-origin: center center -0.5vmin;
    position: absolute;
    top: 0;
    left: 0;

    > .cube-wrap {
      animation: cube $duration 1 both;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      transform-style: preserve-3d;
      backface-visibility: visible;
      transform-origin: center center -0.5vmin;
      will-change: transform;

      @keyframes cube {
        from,
        to,
        20%,
        60% {
          animation-timing-function: step-start;
          transform: none;
        }

        40% {
          transform: rotateY(-1turn);
        }
      }
    }

    &[data-cube^="1"] {
      top: calc(-7.5vmin - #{$gap});
      --color-bg-top: var(--theme-bg-top);
      --color-bg-bottom: color-mix(in srgb, var(--theme-bg-top) 50%, var(--theme-bg-bottom));
      --color-fl-top: var(--theme-fl-top);
      --color-fl-bottom: color-mix(in srgb, var(--theme-fl-top) 50%, var(--theme-fl-bottom));
    }

    &[data-cube^="2"] {
      --color-bg-top: color-mix(in srgb, var(--theme-bg-top) 50%, var(--theme-bg-bottom));
      --color-bg-bottom: color-mix(in srgb, var(--theme-bg-top) 25%, var(--theme-bg-bottom));
      --color-fl-top: color-mix(in srgb, var(--theme-fl-top) 50%, var(--theme-fl-bottom));
      --color-fl-bottom: color-mix(in srgb, var(--theme-fl-top) 25%, var(--theme-fl-bottom));
    }

    &[data-cube^="3"] {
      top: calc(7.5vmin + #{$gap});
      --color-bg-top: color-mix(in srgb, var(--theme-bg-top) 25%, var(--theme-bg-bottom));
      --color-bg-bottom: var(--theme-bg-bottom);
      --color-fl-top: color-mix(in srgb, var(--theme-fl-top) 25%, var(--theme-fl-bottom));
      --color-fl-bottom: var(--theme-fl-bottom);
    }

    &[data-cube^="11"],
    &[data-cube^="21"],
    &[data-cube^="31"] {
      left: calc(-7.5vmin - #{$gap});
      --color-fr-top: var(--theme-fr-top);
      --color-fr-bottom: color-mix(in srgb, var(--theme-fr-top) 66%, var(--theme-fr-bottom));
    }

    &[data-cube^="12"],
    &[data-cube^="22"],
    &[data-cube^="32"] {
      --color-fr-top: color-mix(in srgb, var(--theme-fr-top) 66%, var(--theme-fr-bottom));
      --color-fr-bottom: color-mix(in srgb, var(--theme-fr-top) 33%, var(--theme-fr-bottom));
    }

    &[data-cube^="13"],
    &[data-cube^="23"],
    &[data-cube^="33"] {
      left: calc(7.5vmin + #{$gap});
      --color-fr-top: color-mix(in srgb, var(--theme-fr-top) 33%, var(--theme-fr-bottom));
      --color-fr-bottom: var(--theme-fr-bottom);
    }

    &[data-cube$="2"] {
      transform: translateZ(calc(7.5vmin + #{$gap}));
    }

    &[data-cube$="3"] {
      transform: translateZ(calc(-7.5vmin - #{$gap}));
    }
  }

  .large-shadows {
    transform: translateZ(-15.75vmin);
  }

  .large-shadow {
    background: black;
    height: 7.5vmin;
    width: 7.5vmin;
    transform-origin: top right;
    animation: large-shadow $duration 1 both;
    filter: var(--shadow-filter, blur(2.25vmin));
    opacity: 0.2;
    will-change: transform;

    @keyframes large-shadow {
      from,
      80%,
      to {
        transform: scale(1.5, 3);
      }

      20% {
        transform: scale(1.5, 2);
      }

      40%,
      60% {
        transform: scale(1.5, 5);
      }

      50% {
        transform: scale(1, 5);
      }
    }
  }

  [class^="cube-"] {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: visible;
    top: 0;
    left: 0;

    &,
    &:before {
      will-change: transform;
      animation: any $duration 1 both;
    }

    &:before {
      content: "";
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: inherit;
    }
  }

  .cube-top {
    animation-name: cube-top;
    overflow: hidden;

    &:before,
    &:after {
      will-change: transform;
    }

    &:before {
      background-image: linear-gradient(to bottom, #cbfeff, transparent),
        linear-gradient(to bottom, var(--color-bg-top), var(--color-bg-bottom));
      background-size:
        2px 100%,
        auto;
      background-repeat: no-repeat;
    }

    &:after {
      content: "";
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: #dff4f0;
      animation: cube-top-flash $duration 1 both;

      @keyframes cube-top-flash {
        from,
        50%,
        60%,
        to {
          opacity: 0;
        }

        52% {
          opacity: 0.9;
        }
      }
    }

    @keyframes cube-top {
      20% {
        transform: translateZ(calc(-7.5vmin + 1.5vmin));
      }

      40%,
      60%,
      80% {
        transform: none;
      }
    }
  }

  .cube-front-left {
    transform-origin: left center;
    transform: rotateY(90deg);
    overflow: hidden;

    &:before {
      background-image: linear-gradient(to bottom, var(--color-fl-top), var(--color-fl-bottom)),
        linear-gradient(to bottom, rgba(white, 0.5), transparent 60%);
      background-size: auto auto 1px 100%;
      background-repeat: no-repeat;
      transform-origin: right;
      animation-name: cube-front-left;
      will-change: transform;
    }

    @keyframes cube-front-left {
      20% {
        transform: scaleX(0.2);
      }

      40%,
      60% {
        transform: translateX(-6vmin) scaleX(0.2);
      }

      80% {
        transform: none;
      }
    }
  }

  .cube-front-right {
    transform-origin: bottom center;
    transform: rotateX(90deg);

    &:before {
      // background-color: #2C5060;
      background-image: linear-gradient(to right, var(--color-fr-top), var(--color-fr-bottom));
      transform-origin: top;
      animation-name: cube-front-right;
      will-change: transform;
    }

    @keyframes cube-front-right {
      20% {
        transform: scaleY(0.2);
      }

      40%,
      60% {
        transform: translateY(6vmin) scaleY(0.2);
      }

      80% {
        transform: none;
      }
    }
  }

  .cube-bottom {
    transform: translateZ(-7.5vmin);
    background-image: linear-gradient(to bottom, var(--color-bg-top), var(--color-bg-bottom));
    animation-name: cube-bottom;

    @keyframes cube-bottom {
      from,
      20%,
      80%,
      to {
        transform: translateZ(calc(-7.5vmin + 1px)) scale(0.95);
      }

      40%,
      60% {
        transform: translateZ(-1.3vmin) scale(0.95);
      }
    }

    &:after {
      content: "";
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: #dff4f0;
      animation: cube-bottom-flash $duration 1 both;
      will-change: transform;

      @keyframes cube-bottom-flash {
        from,
        40%,
        50%,
        to {
          opacity: 0;
        }

        45% {
          opacity: 0.9;
        }
      }
    }
  }

  [class^="shadow"] {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    filter: var(--shadow-filter, blur(15px));

    &,
    &:before {
      will-change: transform;
    }

    &:before {
      content: "";
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: #214354;
      opacity: 0.7;
    }
  }

  .shadow-y {
    animation: shadow-y $duration 1 both;

    &[data-cube^="11"],
    &[data-cube^="21"] {
      left: 10%;
    }

    &[data-cube^="13"],
    &[data-cube^="23"] {
      left: -10%;
    }

    @keyframes shadow-y {
      to,
      40%,
      60%,
      80%,
      from {
        transform: translateY(-100%) scale(2, 0.75);
      }

      20% {
        transform: scale(2, 1);
      }
    }

    &:before {
      animation: shadow-y-inverse $duration 1 both;
      transform-origin: top center;

      @keyframes shadow-y-inverse {
        to,
        40%,
        60%,
        80%,
        from {
          opacity: 0.9;
          transform: scale(2, 1);
        }

        20% {
          opacity: 0;
          transform: translateY(-100%) scale(2, 0.75);
        }
      }
    }
  }

  .shadow-flip {
    width: 1.5vmin;
    height: 50%;
    top: -0.75vmin;
    left: calc(50% - 0.75vmin);
    transform-origin: top center;
    filter: var(--shadow-filter, blur(0.75vmin));
    animation: shadow-flip $duration 1 both;
    overflow: visible;

    @keyframes shadow-flip {
      from,
      20%,
      40%,
      50%,
      to {
        transform: rotate(90deg);
      }

      45% {
        transform: rotate(270deg);
      }
    }

    &:before {
      animation: shadow-flip-inverse $duration 1 both;
      transform-origin: top center;
      opacity: 0;

      @keyframes shadow-flip-inverse {
        from,
        20%,
        40%,
        50%,
        to {
          transform: rotate(0deg);
          opacity: 0;
        }

        45% {
          transform: rotate(-180deg);
          opacity: 0.6;
        }
      }
    }
  }

  .shadow-z {
    animation: shadow-z $duration 1 both;
    overflow: visible;
    will-change: transform;
    transform-origin: top center;

    &[data-cube^="11"] {
      --shadow-z-left: 50%;
      --shadow-z-top: 50%;
    }

    &[data-cube^="21"],
    &[data-cube^="31"] {
      --shadow-z-left: 50%;
      --shadow-z-top: 0;
    }

    &[data-cube^="32"] {
      --shadow-z-left: 0;
      --shadow-z-top: 0;
      --shadow-x-scale: 2;
    }

    &[data-cube^="33"] {
      --shadow-z-left: -50%;
      --shadow-z-top: 0;
    }

    @keyframes shadow-z {
      from,
      40%,
      60%,
      80%,
      to {
        transform: scale(var(--shadow-x-scale), 2);
      }

      20% {
        transform: translateX(var(--shadow-z-left)) translateY(var(--shadow-z-top))
          scale(calc(var(--shadow-x-scale, 1) / 2), 2);
      }
    }

    &:before {
      animation: shadow-z-inverse $duration 1 both;

      @keyframes shadow-z-inverse {
        40%,
        60% {
          transform: translateX(var(--shadow-z-left)) translateY(var(--shadow-z-top)) scale(var(--shadow-x-scale, 1), 2);
        }

        45% {
          opacity: 0;
        }

        from,
        40%,
        55% {
          opacity: 0.5;
        }

        to {
          opacity: 1;
        }

        from,
        20%,
        80%,
        to {
          transform: scale(2);
        }
      }
    }
  }

  @each $key in map-keys($delays) {
    .cube[data-cube="#{$key}"] > .cube-wrap {
      &,
      > [class^="cube-"] {
        &,
        &:before,
        &:after {
          animation-delay: map-get($delays, $key) * 1ms;
        }
      }

      [class^="shadow-"] {
        animation-delay: map-get($delays, $key) * 1ms;
      }
    }

    [class^="shadow-"][data-cube="#{$key}"]:before,
    .large-shadow[data-cube="#{$key}"] {
      animation-delay: map-get($delays, $key) * 1ms;
    }
  }
}
